/* === Grid === */
.row {
    @include flexbox();
    @include justify-content(space-between);
    @include flex-wrap(wrap);
    @include align-items(flex-start);
    > [class*="col-"] {
        box-sizing: border-box;
    }
}
$cols: 5, 10, 15, 20, 25, 30, 100/3, 35, 40, 45, 50, 55, 60, 65, 100*(2/3), 70, 75, 80, 85, 90, 95, 100;
.row {
  .col-auto {
    width: 100%;
  }

  $i: length($cols);
  $divider: nth($cols, $i);
  $className: floor($divider);
  $n: 100/$divider;
  $n-1: $n - 1;
  @for $i from length($cols) through 1 {
    .col-#{$className} {
      width: calc((100% - (16px * #{$n-1}) / #{$n}));
    }
    &.no-gutter {
      .col-#{$className} {
        width: $divider * 1%;
      }
    }
  }

  $j: 1;
  $divider: nth($cols, $j);
  $className: floor($divider);
  @for $j from 1 through length($cols) - 1 {
    .col-auto:nth-last-child(#{$j}), .col-auto:nth-last-child(#{$j}) ~ .col-auto {
      $j-1: $j - 1;
      width: calc(100% - (16px * #{$j-1}) / #{$j});
    }
    &.no-gutter {
      .col-auto:nth-last-child(#{$j}), .col-auto:nth-last-child(#{$j}) ~ .col-auto {
        width: 100% / $j;
      }
    }
  }

}

@media all and (min-width: 768px) {
  .row {
    $i: length($cols);
    $divider: nth($cols, $i);
    $className: floor($divider);
    $n: 100/$divider;
    $n-1: $n - 1;
    @for $i from length($cols) through 1 {
      .tablet-#{$className} {
        width: calc((100% - (16px * #{$n-1}) / #{$n}));
      }
      &.no-gutter {
        .tablet-#{$className} {
          width: $divider * 1%;
        }
      }
    }

    $j: 1;
    $divider: nth($cols, $j);
    $className: floor($divider);
    @for $j from 1 through length($cols) - 1 {
      .tablet-auto:nth-last-child(#{$j}), .tablet-auto:nth-last-child(#{$j}) ~ .col-auto {
        $j-1: $j - 1;
        width: calc(100% - (16px * #{$j-1}) / #{$j});
      }
      &.no-gutter {
        .tablet-auto:nth-last-child(#{$j}), .tablet-auto:nth-last-child(#{$j}) ~ .tablet-auto {
          width: 100% / $j;
        }
      }
    }
  }
}
